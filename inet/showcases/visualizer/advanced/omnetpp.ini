[Config advanced]
network = advanced

**.arpType = "GlobalARP"

*.server.numUdpApps = 1
*.server.udpApp[0].typename = "UDPVideoStreamSvr"
*.server.udpApp[*].localPort = 1001
*.server.udpApp[*].packetLen = 1000Byte
*.server.udpApp[*].videoSize = 1MiB
*.server.udpApp[*].sendInterval = 0.1ms

# TODO: explain this
*.visualizer2.networkNodeVisualizerType = ""
*.visualizer2.*.networkNodeVisualizerModule = "visualizer1.networkNodeVisualizer"

*.visualizer1.statisticVisualizer.displayStatistics = true
*.visualizer1.statisticVisualizer.signalName = "passedUpPk"
*.visualizer1.statisticVisualizer.sourceFilter = "**.udp"	# TODO: should be **.udp when the '-' problem is fixed
*.visualizer1.statisticVisualizer.format = "UDP packets received: %v"

# TODO: crash if format left on default because of %u
# TODO: when the last value of the statistic is 0, '-' is displayed

*.visualizer2.statisticVisualizer.displayStatistics = true
*.visualizer2.statisticVisualizer.signalName = "rcvdPk"
*.visualizer2.statisticVisualizer.statisticName = "rcvdBytes"
*.visualizer2.statisticVisualizer.unit = "KiB"
*.visualizer2.statisticVisualizer.sourceFilter = "**.tcpApp[*]"
*.visualizer2.statisticVisualizer.format = "TCP data received: %v %u"

*.visualizer*.statisticVisualizer.placementPriority = -1
# in the udp client -> rcvdpk statistic
# in the tcp client -> end-to-end-delay statistic

# in the server as well

# and maybe the server should have the rcvdpk statistic -> should be one, because of the video stream request

# udp should be red and tcp should be blue

# should be more hosts doing things
# maybe even some pings as well

# like one group of hosts streams udp
# another group of hosts tcp
# and some from each group pings sometimes, then again with a different color

# maybe some hosts should talk to each other, not just the server

# more organic network layout

*.server.numTcpApps = 2
*.server.tcpApp[*].typename = "TCPSessionApp"
*.server.tcpApp[0].connectAddress = "10.0.0.27"
*.server.tcpApp[0].connectPort = 1000
*.server.tcpApp[1].connectAddress = "10.0.0.20"
*.server.tcpApp[1].connectPort = 1001
*.server.tcpApp[*].localAddress = "10.0.0.10"
*.server.tcpApp[0].localPort = 1000
*.server.tcpApp[1].localPort = 1001
*.server.tcpApp[*].tOpen = 0s
*.server.tcpApp[*].tSend = 0s
*.server.tcpApp[*].active = true
*.server.tcpApp[*].sendBytes = 1MiB

*.host2.numUdpApps = 1
*.host2.udpApp[0].typename = "UDPVideoStreamCli"
*.host2.udpApp[*].localPort = 1000
*.host2.udpApp[*].serverAddress = "server"
*.host2.udpApp[*].serverPort = 1001
*.host2.udpApp[*].startTime = 0s

*.host4.numUdpApps = 1
*.host4.udpApp[0].typename = "UDPVideoStreamCli"
*.host4.udpApp[*].localPort = 1000
*.host4.udpApp[*].serverAddress = "server"
*.host4.udpApp[*].serverPort = 1001
*.host4.udpApp[*].startTime = 0s

*.visualizer1.networkRouteVisualizer.displayRoutes = true
*.visualizer1.networkRouteVisualizer.packetFilter = "*tcp* or *ACK* or *SYN*"
*.visualizer1.networkRouteVisualizer.lineColor = "blue"

*.visualizer2.networkRouteVisualizer.displayRoutes = true
*.visualizer2.networkRouteVisualizer.packetFilter = "*Video*"
*.visualizer2.networkRouteVisualizer.lineColor = "red"

*.visualizer1.transportConnectionVisualizer.displayTransportConnections = true
*.visualizer1.transportConnectionVisualizer.iconColor = "green, yellow"


# TCP connection to host3?
# so its really useful -> easy to tell different connections apart

#*.host4.numUdpApps = 1
#*.host4.udpApp[0].typename = "UDPVideoStreamCli"
#*.host4.udpApp[*].localPort = 1000
#*.host4.udpApp[*].serverAddress = "server"
#*.host4.udpApp[*].serverPort = 1001

# maybe there should be more connections
# tcp in the upper hosts and udp in the lower...so they are criss-crossing...but easy to identify them
# because they are color coded

*.host5.numTcpApps = 1
*.host5.tcpApp[0].typename = "TCPSinkApp"
*.host5.tcpApp[*].localAddress = "10.0.0.27"
*.host5.tcpApp[*].localPort = 1000

*.host3.numTcpApps = 1
*.host3.tcpApp[0].typename = "TCPSinkApp"
*.host3.tcpApp[*].localAddress = "10.0.0.20"
*.host3.tcpApp[*].localPort = 1001

#*.visualizer1.interfaceTableVisualizer.displayInterfaceTables = true

[Config advanced2]
network = advanced2
description = "trying 3D"

**.arpType = "GlobalARP"

*.visualizer11.osgVisualizerType = "IntegratedOsgVisualizer" # TODO: remove when enabled by default
*.visualizer22.osgVisualizerType = "IntegratedOsgVisualizer" # TODO: remove when enabled by default


*.server.numUdpApps = 1
*.server.udpApp[0].typename = "UDPVideoStreamSvr"
*.server.udpApp[*].localPort = 1001
*.server.udpApp[*].packetLen = 1000Byte
*.server.udpApp[*].videoSize = 1MiB
*.server.udpApp[*].sendInterval = 0.1ms

# TODO: explain this
*.visualizer22.*.networkNodeVisualizerType = ""
*.visualizer22.canvasVisualizer.*.networkNodeVisualizerModule = "visualizer11.canvasVisualizer.networkNodeVisualizer"
*.visualizer22.osgVisualizer.*.networkNodeVisualizerModule = "visualizer11.osgVisualizer.networkNodeVisualizer"
*.visualizer22.*.sceneVisualizerType = ""

*.visualizer11.*.statisticVisualizer.displayStatistics = true
*.visualizer11.*.statisticVisualizer.signalName = "passedUpPk"
*.visualizer11.*.statisticVisualizer.sourceFilter = "**.udp"	# TODO: should be **.udp when the '-' problem is fixed
*.visualizer11.*.statisticVisualizer.format = "UDP packets received: %v"

# TODO: crash if format left on default because of %u
# TODO: when the last value of the statistic is 0, '-' is displayed

*.visualizer22.*.statisticVisualizer.displayStatistics = true
*.visualizer22.*.statisticVisualizer.signalName = "rcvdPk"
*.visualizer22.*.statisticVisualizer.statisticName = "rcvdBytes"
*.visualizer22.*.statisticVisualizer.unit = "KiB"
*.visualizer22.*.statisticVisualizer.sourceFilter = "**.tcpApp[*]"
*.visualizer22.*.statisticVisualizer.format = "TCP data received: %v %u"

*.visualizer*.statisticVisualizer.placementPriority = -1
# in the udp client -> rcvdpk statistic
# in the tcp client -> end-to-end-delay statistic

# in the server as well

# and maybe the server should have the rcvdpk statistic -> should be one, because of the video stream request

# udp should be red and tcp should be blue

# should be more hosts doing things
# maybe even some pings as well

# like one group of hosts streams udp
# another group of hosts tcp
# and some from each group pings sometimes, then again with a different color

# maybe some hosts should talk to each other, not just the server

# more organic network layout

*.server.numTcpApps = 2
*.server.tcpApp[*].typename = "TCPSessionApp"
*.server.tcpApp[0].connectAddress = "10.0.0.27"
*.server.tcpApp[0].connectPort = 1000
*.server.tcpApp[1].connectAddress = "10.0.0.20"
*.server.tcpApp[1].connectPort = 1001
*.server.tcpApp[*].localAddress = "10.0.0.10"
*.server.tcpApp[0].localPort = 1000
*.server.tcpApp[1].localPort = 1001
*.server.tcpApp[*].tOpen = 0s
*.server.tcpApp[*].tSend = 0s
*.server.tcpApp[*].active = true
*.server.tcpApp[*].sendBytes = 1MiB

*.host2.numUdpApps = 1
*.host2.udpApp[0].typename = "UDPVideoStreamCli"
*.host2.udpApp[*].localPort = 1000
*.host2.udpApp[*].serverAddress = "server"
*.host2.udpApp[*].serverPort = 1001
*.host2.udpApp[*].startTime = 0s

*.host4.numUdpApps = 1
*.host4.udpApp[0].typename = "UDPVideoStreamCli"
*.host4.udpApp[*].localPort = 1000
*.host4.udpApp[*].serverAddress = "server"
*.host4.udpApp[*].serverPort = 1001
*.host4.udpApp[*].startTime = 0s

*.visualizer11.*.networkRouteVisualizer.displayRoutes = true
*.visualizer11.*.networkRouteVisualizer.packetFilter = "*tcp* or *ACK* or *SYN*"
*.visualizer11.*.networkRouteVisualizer.lineColor = "blue"

*.visualizer22.*.networkRouteVisualizer.displayRoutes = true
*.visualizer22.*.networkRouteVisualizer.packetFilter = "*Video*"
*.visualizer22.*.networkRouteVisualizer.lineColor = "red"

*.visualizer11.*.transportConnectionVisualizer.displayTransportConnections = true
*.visualizer11.*.transportConnectionVisualizer.iconColor = "blue"


# TCP connection to host3?
# so its really useful -> easy to tell different connections apart

#*.host4.numUdpApps = 1
#*.host4.udpApp[0].typename = "UDPVideoStreamCli"
#*.host4.udpApp[*].localPort = 1000
#*.host4.udpApp[*].serverAddress = "server"
#*.host4.udpApp[*].serverPort = 1001

# maybe there should be more connections
# tcp in the upper hosts and udp in the lower...so they are criss-crossing...but easy to identify them
# because they are color coded

*.host5.numTcpApps = 1
*.host5.tcpApp[0].typename = "TCPSinkApp"
*.host5.tcpApp[*].localAddress = "10.0.0.27"
*.host5.tcpApp[*].localPort = 1000

*.host3.numTcpApps = 1
*.host3.tcpApp[0].typename = "TCPSinkApp"
*.host3.tcpApp[*].localAddress = "10.0.0.20"
*.host3.tcpApp[*].localPort = 1001

#*.visualizer1.interfaceTableVisualizer.displayInterfaceTables = true
